version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-ecs: circleci/aws-ecs@2.4.0

jobs:
  test:
    docker:
      - image: cimg/node:18.14.0
    steps:
      - checkout
      - run:
          name: Install dependencies and run tests
          command: |
            cd backend && npm install && npm run test --if-present
            cd ../frontend && npm install && npm run test --if-present

  build-backend:
    docker:
      - image: cimg/node:18.14.0
    working_directory: ~/repo/backend
    steps:
      - checkout
      - run:
          name: Install backend dependencies
          command: npm install
      - run:
          name: Build backend code
          command: npm run build
      - run:
          name: Build Docker image for backend
          command: docker build -t myrepo/fitness-backend:latest .

  build-frontend:
    docker:
      - image: cimg/node:18.14.0
    working_directory: ~/repo/frontend
    steps:
      - checkout
      - run:
          name: Install frontend dependencies
          command: npm install
      - run:
          name: Build frontend code
          command: npm run build
      - run:
          name: Build Docker image for frontend
          command: docker build -t myrepo/fitness-frontend:latest .

  push-images:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      # Push backend image
      - aws-ecr/push-image:
          account-url: "<aws_account_id>.dkr.ecr.<region>.amazonaws.com"
          repo: "fitness-backend"
          tag: "latest"
          region: "<region>"
          image: "myrepo/fitness-backend"
      # Push frontend image
      - aws-ecr/push-image:
          account-url: "<aws_account_id>.dkr.ecr.<region>.amazonaws.com"
          repo: "fitness-frontend"
          tag: "latest"
          region: "<region>"
          image: "myrepo/fitness-frontend"

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Deploy to AWS ECS
          command: |
            aws ecs update-service --cluster fitness-cluster --service fitness-service --force-new-deployment --region <region>

workflows:
  build_deploy:
    jobs:
      - test
      - build-backend:
          requires:
            - test
      - build-frontend:
          requires:
            - test
      - push-images:
          requires:
            - build-backend
            - build-frontend
      - deploy:
          requires:
            - push-images
